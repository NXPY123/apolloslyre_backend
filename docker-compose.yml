version: '3.8'

services:
  flask:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: flask_server
    ports:
      - "8001:8000"
    environment:
      - FLASK_ENV=production
      - FLASK_APP=flaskr
      - FLASK_INSTANCE_PATH=/app/instance
      - DATABASE=postgresql://user:password@db:5432/mydb
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - SHARED_VOLUME_PATH=/app/shared
      - SECRET_KEY=thisisaverysecretkey
    volumes:
      - .:/app
      - shared_data:/app/instance
    depends_on:
      - redis
      #- db
      - torchserve
      #- celery
    entrypoint: ["sh", "-c", "flask run --host=0.0.0.0 --port=8000"]
    
  redis:
    image: redis:7
    container_name: redis_broker
    ports:
      - "6379:6379"

  # db: # Do we need the db service?
  #   image: postgres:15
  #   container_name: postgres_db
  #   environment:
  #     POSTGRES_USER: user
  #     POSTGRES_PASSWORD: password
  #     POSTGRES_DB: mydb
  #   volumes:
  #     - db_data:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: celery_worker
    command: celery -A make_celery worker -P threads --loglevel=info 
    environment:
      - FLASK_ENV=production
      - FLASK_APP=flaskr
      - FLASK_INSTANCE_PATH=/app/instance
      - DATABASE=postgresql://user:password@db:5432/mydb
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - SHARED_VOLUME_PATH=/app/shared
      - SECRET_KEY=thisisaverysecretkey
    volumes:
      - shared_data:/app/instance
    depends_on:
      - redis

  torchserve:
    build:
      context: ./Serving
      dockerfile: TorchServeDockerfile
    ports:
      - "8080:8080"
      - "8081:8081"
    volumes:
      - shared_data:/app/shared # Is this required?

volumes:
  shared_data:
  #db_data:
